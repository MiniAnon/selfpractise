#include<bits/stdc++.h>
using namespace std;

// Class of Node.
class node{
    public:
    int data;
    node* left;
    node* right;
    node(int val){
        this->data=val;
        this->left=NULL;
        this->right=NULL;
    }
};

// Class of Creating Tree using Node class
node* tree(node* root){
    cout<<"Enter the data: ";
    int data;
    cin>>data;
    root=new node(data);
    // If we don't want any value or want NULL
    if(data==-1){
        return NULL;
    }
    cout<<"Enter the data you want to insert in the left of "<<data<<endl;
    root->left=tree(root->left);
    cout<<"Enter the data you want to insert in the right of "<<data<<endl;
    root->right=tree(root->right);
    return root;
}
void levelorder(node* root){
    queue <node*> q;
    q.push(root);
    q.push(NULL);
    while(!q.empty()){
        node* temp=q.front();
        q.pop();
        if(temp==NULL){
        // Previous level is traversed , now need a separator
        cout<<endl;
        // IMP
        if(!q.empty()){
            // Queue still have some child nodes
            q.push(NULL);
        }
        }
        else{
        cout<<temp->data<<" ";
        if(temp->left){
            q.push(temp->left);
        }
        if(temp->right){
            q.push(temp->right);
        }
        }
    }
}
// Main Class
int main(){
    node* root=NULL;
    root=tree(root);
    cout<<endl<<"Printing the elements of tree by level order\n";
    levelorder(root);
    return 0;
}
